# -*- coding: utf-8 -*-
"""Proyek kedua : Time Series.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lunxVvDjL11Nzwn3ruDl23OKSQuDnea_

#####Mamta Anisa Bella#####
bellagofarsah@gmail.com
"""

import numpy as np
import pandas as pd
from keras.layers import Dense, LSTM
import matplotlib.pyplot as plt
import tensorflow as tf

df = pd.read_csv('/content/drive/MyDrive/ANTM.JK.csv')
df.head()

#membuat grafik kolom close
dates = df['Date'].values
volume = df['Close'].values
 
 
plt.figure(figsize=(15,5))
plt.plot(dates, volume)
plt.title('Close ANTM',
          fontsize=20);

#mengubah data kolom close menjadi array dan pembagian data training dan testing
data = df.filter(['Close'])
dataset = data.values
training_data_len = np.ceil( len(dataset) *.8)

#membuat skala data
from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler(feature_range=(0, 1)) 
scaled_data = scaler.fit_transform(dataset)

#membuat skala data training
train_data = scaled_data[0:int(training_data_len), :]
x_train = []
y_train = []

for i in range(60, len(train_data)):
    x_train.append(train_data[i-60:i, 0])
    y_train.append(train_data[i, 0])
    if i<= 61:
        print(x_train)
        print(y_train)
        print()

#mengubah x_train dan y_train menjadi numpy arrays
x_train, y_train = np.array(x_train), np.array(y_train)

#melakukan reshape data
x_train = np.reshape(x_train, (x_train.shape[0],x_train.shape[1],1))

#membuat model sequential
model = tf.keras.models.Sequential([
  tf.keras.layers.LSTM(60, return_sequences=True),
  tf.keras.layers.LSTM(60),
  tf.keras.layers.Dense(30, activation="relu"),
  tf.keras.layers.Dense(10, activation="relu"),
  tf.keras.layers.Dense(1),
])

#menggunakan learning rate pada optimizer
optimizer = tf.keras.optimizers.SGD(lr=1.0000e-04, momentum=0.9)
model.compile(loss=tf.keras.losses.Huber(), optimizer=optimizer, metrics=['mae'])

#melatih model
model.fit(x_train, y_train, batch_size=1, epochs=15)